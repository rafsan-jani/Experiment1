Questions no -1 
What is the output for the below code ?

class A implements Runnable{
	public void run(){
		System.out.println(Thread.currentThread().getName());
	}   
}


public class Test {		
	public static void main(String... args) {	
		A a = new A();
		Thread t = new Thread(a);
		Thread t1 = new Thread(a);		
		t.setName("t");
		t1.setName("t1");
		t.setPriority(10);
		t1.setPriority(-3);
		t.start();
		t1.start();
		
	}
}



Options are

A.t t1
B.t1 t
C.t t
D.Compilation succeed but Runtime Exception



Questions no -2 
What is the output for the below code ?

class A implements Runnable{
	public void run(){
		System.out.println(Thread.currentThread().getName());
	}   
}

1. public class Test {		
2.	public static void main(String... args) {	
3.		A a = new A();
4.		Thread t = new Thread(a);
5.		t.setName("good");
6.		t.start();
7.	}
8. }





Options are

A.good
B.null
C.Compilation fails with an error at line 5
D.Compilation succeed but Runtime Exception



Questions no -3 
What is the output for the below code ?

public class Test {
	

	public static void main(String[] args) {
		Boolean expr = true;
		if (expr) {
			System.out.println("true");
		} else {
			System.out.println("false");
		}
		
	}


}




options
A)true
B)Compile Error - can't use Boolean object in if().
C)false
D)Compile Properly but Runtime Exception.

Answer: __________
	| A)true |
	----------

Questions no -4 
What is the output for the below code ?

public class Test {
	

	public static void main(String[] args) {
		List<Integer> list = new ArrayList<Integer>(); 
		list.add(0, 59);
		int total = list.get(0);
		System.out.println(total);

		
	}


}




options
A)59
B)Compile time error, because you have to do int total = ((Integer)(list.get(0))).intValue();
C)Compile time error, because can't add primitive type in List.
D)Compile Properly but Runtime Exception.

Answer: __________
	|  A)59  |
	----------

Questions no -3 
What is the output for the below code ?

public class Test {
	

	public static void main(String[] args) {
		Integer i = null;
		int j = i;
		System.out.println(j);
		
	}


}



options
A)0
B)Compile with error 
C)null
D)NullPointerException

Answer: __________________________
	| D)NullPointerException |
	--------------------------

Questions no -4 
What is the output for the below code ?

public class Outer {
	private int a = 7;
	   
	   class Inner {
	      public void displayValue() {
	         System.out.println("Value of a is " + a);
	      }
	   }
	}


public class Test {
	
	public static void main(String... args) throws Exception {
		Outer mo = new Outer();     
		  Outer.Inner inner = mo.new Inner();
		  inner.displayValue();

	}
	
}




options
A)Value of a is 7
B)Compile Error - not able to access private member.
C)Runtime Exception
D)Value of a is 8

	Answer: _____________________
		| A)Value of a is 7 |
		---------------------

Questions no -5 
What is the output for the below code ?

public class B {
	
	public String getCountryName(){
		return "USA";
	}
	
	public StringBuffer getCountryName(){
		StringBuffer sb = new StringBuffer();
		sb.append("UK");
		return sb;
	}
	
	
	public static void main(String[] args){
		B b = new B();
		System.out.println(b.getCountryName().toString());
	}

}



options
A)Compile with error
B)USA
C)UK
D) Runtime Exception

	Answer: __________
		| C) UK	 |
		----------

Questions no -6
What is the output for the below code ?

public class C {

}

public class D extends C{

}

public class A {
	
	public C getOBJ(){
		System.out.println("class A - return C");
		return new C();
		
	}

}

public class B extends A{
	
	public D getOBJ(){
		System.out.println("class B - return D");
		return new D();
		
	}

}

public class Test {

public static void main(String... args) {
     A a = new B();
     a.getOBJ();
	
     }
}



options
A)Compile with error - Not allowed to override the return type of a method with a subtype of the original type.
B)class A - return C
C)class B - return D
D) Runtime Exception

	Answer: ______________________
		|C)class B - return D |
		-----------------------
		
Questions no -7
What is the output for the below code ?

public class A {
	
	public String getName() throws ArrayIndexOutOfBoundsException{
		return "Name-A";
	}
	
}
	
public class C extends A{
	
	public String getName() throws Exception{
		return "Name-C";
	}

}
	
	
public class Test {
	public static void main(String... args) {
		A a = new C();
		a.getName();
	}
	
}



options
A)Compile with error
B)Name-A
C)Name-C
D)Runtime Exception
	
	Answer: ____________
		| C)Name-C |
		------------

Questions no -8 
What is the output for the below code ?

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Test {
	
	public static void main(String... args) {
            
		Pattern p = Pattern.compile("a*b");
		Matcher m = p.matcher("b");
		boolean b = m.matches();
		System.out.println(b);

		

	}
}




options
A)true
B)Compile Error
C)false
D)b

	Answer: __________
		|A)true  |
		----------

Questions no -9 
What is the output for the below code ?

public class Test {
	
	public static void main(String... args) {
            
		
		String input = "1 fish 2 fish red fish blue fish";
		Scanner s = new Scanner(input).useDelimiter("\\s*fish\\s*");
		System.out.println(s.nextInt());
		System.out.println(s.nextInt());
		System.out.println(s.next());
		System.out.println(s.next());
		s.close(); 
		

	}
}




options
A)1 2 red blue
B)Compile Error - because Scanner is not defind in java.
C)1 fish 2 fish red fish blue fish
D)1 fish 2 fish red blue fish

	Answer:	__________________
		| A)1 2 red blue |
		------------------

Questions no -10 
What is the output for the below code ?

public class Test {
	
	public static void main(String... args) {
            
		Pattern p = Pattern.compile("a{3}b?c*");
		Matcher m = p.matcher("aaab");
		boolean b = m.matches();
		System.out.println(b);

		

	}
}




options
A)true
B)Compile Error 
C)false
D)NullPointerException

	Answer: ____________
		| A)true   |
		------------

Questions no -11 
What is the output for the below code ?

public class Test {
	
	public static void main(String... args) {
            
		Pattern p = Pattern.compile("a{1,3}b?c*");
		Matcher m = p.matcher("aaab");
		boolean b = m.matches();
		System.out.println(b);

		

	}
}




options
A)true
B)Compile Error 
C)false
D)NullPointerException

	Answer: ____________
		| A)true   |
		------------

Questions no -12 
What is the output for the below code ?

public class A {
	public A() {
        System.out.println("A");
    }
}

public class B extends A implements Serializable {
	public B() {
        System.out.println("B");
    }

}

public class Test {
	
	public static void main(String... args) throws Exception {
		B b = new B();
       
        ObjectOutputStream save = new ObjectOutputStream(new FileOutputStream("datafile"));
        save.writeObject(b); 
        save.flush(); 
        

        ObjectInputStream restore = new ObjectInputStream(new FileInputStream("datafile"));
        B z = (B) restore.readObject();

        

	}
	
}




options
A)A B A
B)A B A B
C)B B
D)A B

	Answer:


Questions no -13 
What is the output for the below code ?

public class A {}

public class B implements Serializable  {
	A a = new A();
	public static void main(String... args){
		B b = new B();
		try{
			FileOutputStream fs = new FileOutputStream("b.ser");
			ObjectOutputStream os = new ObjectOutputStream(fs);
			os.writeObject(b);
			os.close();
			
		}catch(Exception e){
			e.printStackTrace();
		}
		
	}

}




options
A)Compilation Fail
B)java.io.NotSerializableException:  Because class A is not Serializable.
C)Run properly
D)Compilation Fail :  Because class A is not Serializable.

	Answer:


Questions no -14 
What is the output for the below code running in the same JVM?

public class A implements Serializable {
	transient int a = 7;
	  static int b = 9;

}

public class B implements Serializable  {
	
	public static void main(String... args){
		A a = new A();
		try {
		      ObjectOutputStream os = new ObjectOutputStream(
		         new FileOutputStream("test.ser"));
		      os.writeObject(a);  
		      os. close();
		      System.out.print( + + a.b + " ");

		      ObjectInputStream is = new ObjectInputStream(new FileInputStream("test.ser"));
		      A s2 = (A)is.readObject();
		      is.close();
		      System.out.println(s2.a + " " + s2.b);
		    } catch (Exception x) 
		    {
		    	x.printStackTrace();
		    }

	}

}




options
A)9 0 9
B)9 7 9
C)0 0 0
D)0 7 0

	Answer:


Questions no -15 
What is the output for the below code ?

public enum Test {
	BREAKFAST(7, 30), LUNCH(12, 15), DINNER(19, 45);
	
	private int hh;

	private int mm;

	Test(int hh, int mm) {
		assert (hh >= 0 && hh <= 23) : "Illegal hour.";
		assert (mm >= 0 && mm <= 59) : "Illegal mins.";
		this.hh = hh;
		this.mm = mm;
	}

	public int getHour() {
		return hh;
	}

	public int getMins() {
		return mm;
	}
	
	public static void main(String args[]){
		Test t =  new BREAKFAST;
		System.out.println(t.getHour() +":"+t.getMins());
	}
}




options
A)7:30
B)Compile Error - an enum cannot be instantiated using the new operator.
C)12:50
D)19:45

	Answer: ___________
		| A)7:30  |
		-----------

Questions no -16 
What is the output for the below code ?

public class Test {
	enum Day {
		MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY
	}
	enum Month {
		JAN, FEB
	}

	public static void main(String[] args) {

		int[] freqArray = { 12, 34, 56, 23, 5, 13, 78 };

		// Create a Map of frequencies
		Map<Day, Integer> ordinaryMap = new HashMap<Day, Integer>();
		for (Day day : Day.values()) {
			ordinaryMap.put(day, freqArray[day.ordinal()]);
		}
		

		// Create an EnumMap of frequencies
		EnumMap<Day, Integer> frequencyEnumMap = new EnumMap<Day, Integer>(ordinaryMap);

		// Change some frequencies
		frequencyEnumMap.put(null, 100);
		
		System.out.println("Frequency EnumMap: " + frequencyEnumMap);

		
	}

}


options
A)Frequency EnumMap: {MONDAY=12, TUESDAY=34, WEDNESDAY=56, THURSDAY=23, FRIDAY=5, SATURDAY=13, SUNDAY=78}
B)Compile Error 
C)NullPointerException
D)Frequency EnumMap: {MONDAY=100, TUESDAY=34, WEDNESDAY=56, THURSDAY=23, FRIDAY=5, SATURDAY=13, SUNDAY=123}

 Answer:
	
Questions no -17 
public class EnumTypeDeclarations {
	
	public void foo() {
		
		enum SimpleMeal { 
			BREAKFAST, LUNCH, DINNER 
		}
	}
}

Is the above code Compile without error ?


options
A)Compile without error
B)Compile with error
C)Compile without error but Runtime Exception
D)Compile without error but Enum Exception

	Answer:______________________
	       |B)Compile with error |
		----------------------

Questions no -18 
What is the output for the below code ?

public enum Test {
	int t;
	BREAKFAST(7, 30), LUNCH(12, 15), DINNER(19, 45);
	
	private int hh;

	private int mm;

	Test(int hh, int mm) {
		assert (hh >= 0 && hh <= 23) : "Illegal hour.";
		assert (mm >= 0 && mm <= 59) : "Illegal mins.";
		this.hh = hh;
		this.mm = mm;
	}

	public int getHour() {
		return hh;
	}

	public int getMins() {
		return mm;
	}
	
	public static void main(String args[]){
		Test t =  BREAKFAST;
		System.out.println(t.getHour() +":"+t.getMins());
	}
}




options
A)7:30
B)Compile Error 
C)12:15
D)19:45

 Answer: ___________________
	 | B)Compile Error |
	 -------------------
	
Questions no -19 
What is the output for the below code ?

public class B extends Thread{
public static void main(String argv[]){
B b = new B();
b.run();
} 
public void start(){
for (int i = 0; i < 10; i++){
System.out.println("Value of i = " + i); 
}  
}
}




options
A)A compile time error indicating that no run method is defined for the Thread class
B)A run time error indicating that no run method is defined for the Thread class
C)Clean compile and at run time the values 0 to 9 are printed out
D)Clean compile but no output at runtime

Answer:


Questions no -20 

What is the output for the below code ?

public class Test extends Thread{

    static String sName = "good";
    public static void main(String argv[]){
    	Test t = new Test();
    t.nameTest(sName);
    System.out.println(sName);
    
    }
    public void nameTest(String sName){
            sName = sName + " idea ";
             start();
    }
    public void run(){
    
    for(int i=0;i  <  4; i++){
            sName = sName + " " + i;
            
    }
    }

}




options
A)good
B)good idea
C)good idea good idea
D)good 0 good 0 1
	
	Answer:


Questions no -21 
What is the output for the below code ?

public class Test{
	public static void main(String argv[]){
	Test1 pm1 = new Test1("One");
	pm1.run();
	Test1 pm2 = new Test1("Two");
	pm2.run();

	}
}

class Test1 extends Thread{
private String sTname="";
Test1(String s){
	sTname = s;

}
public void run(){
	for(int i =0; i < 2 ; i++){
		try{
		 sleep(1000);
		}catch(InterruptedException e){}

		yield();
		System.out.println(sTname);
		}

	}
}




options
A)Compile error
B)One One Two Two
C)One Two One Two
D)One Two

Answer:


Questions no -22 
What is the output for the below code ?

public class Test extends Thread{
    public static void main(String argv[]){
        Test  b = new Test();
        b.start();
    }
    public void run(){      
        System.out.println("Running");
    }
}




options
A)Compilation clean and run but no output
B)Compilation and run with the output "Running"
C)Compile time error with complaint of no Thread import
D)Compile time error with complaint of no access to Thread package

	Answer: 


Questions no -23 
What is the output for the below code ?

public class Tech {
	 public void tech() {
	      System.out.println("Tech");
	   }

}


public class Atech {

	Tech a = new Tech() {	      
	      public void tech() {
	         System.out.println("anonymous tech");
	      }
	   };
	   
	   public void dothis() {
		      a.tech();     
		      
		   }

public static void main(String... args){
	Atech atech = new Atech();
	atech.dothis();
}




options
A)anonymous tech
B)Compile Error 
C)Tech
D)anonymous tech Tech

	Answer:

Questions no -24 
What is the output for the below code ?

public class Outer {
	 private String x = "Outer variable";
	   void doStuff() {
	     String z = "local variable";
	     class Inner {
	       public void seeOuter() {
	         System.out.println("Outer x is " + x);
	         System.out.println("Local variable z is " + z);  
	       } 
	     }   
	   }  
	   
	  
}




options
A)Outer x is Outer variable.
B)Compile Error 
C)Local variable z is local variable.
D)Outer x is Outer variable Local variable z is local variable

	Answer:


Questions no -25

What is the output for the below code ?

public class Test {
	
	public static void main(String... args) {
		for(int i = 2; i < 4; i++)
  for(int j = 2; j < 4; j++)
     assert i!=j : i; 


	}
}

options
A)The class compiles and runs, but does not print anything.
B)The number 2 gets printed with AssertionError
C)The number 3 gets printed with AssertionError
D)compile error

	Answer: ______________________________________________________________
		| A)The class compiles and runs, but does not print anything. |
		---------------------------------------------------------------

Questions no -26

What is the output for the below code ?

public class Test {
	
	public static void main(String... args) {
		for(int i = 2; i < 4; i++)
  for(int j = 2; j < 4; j++)
	if(i < j)
     assert i!=j : i; 


	}
}

options
A)The class compiles and runs, but does not print anything.
B)The number 2 gets printed with AssertionError
C)The number 3 gets printed with AssertionError
D)compile error

	Answer: ______________________________________________________________
		| A)The class compiles and runs, but does not print anything. |
		---------------------------------------------------------------

Questions no -26 
What is the output for the below code ?

public class NameBean {
	private String str;
	
	NameBean(String str ){
		this.str = str;
	}
	
	public String toString() {
		return str;
	}
}								
								
import java.util.HashSet;

public class CollClient {
	
	public static void main(String ... sss) {
		HashSet myMap = new HashSet();
		String s1 = new String("das");
		String s2 = new String("das");
	NameBean s3 = new NameBean("abcdef");
	NameBean s4 = new NameBean("abcdef");
		
		myMap.add(s1);
		myMap.add(s2);
		myMap.add(s3);
		myMap.add(s4);
		
		System.out.println(myMap);
	}	
}




options
A)das abcdef abcdef
B)das das abcdef abcdef
C)das abcdef
D)abcdef abcdef
	

Answer: _________________
	| C)das abcdef	|
	-----------------

Questions no -27 
Synchronized resizable-array implementation of the List interface is _____________?




options
A)Vector
B)ArrayList
C)Hashtable
D)HashMap

Answer: ____________
	| A)Vector |
	------------

Questions no -28 
What is the output for the below code ?
public class Test {

    
    public static void main(String argv[]){
    	 
    	ArrayList list = new ArrayList(); 
    	ArrayList<String> listStr = list; 
    	ArrayList<StringBuffer> listBuf = list; 
    	listStr.add(0, "Hello"); 
    	StringBuffer buff = listBuf.get(0); 
       System.out.println(buff.toString());
    }

}




options
A)Hello
B)Compile error
C)java.lang.ClassCastException
D)null

Answer: __________
	| D)null |
	----------

Questions no -29 
What is the output for the below code ?

import java.util.LinkedList;
import java.util.Queue;


public class Test {
	public static void main(String... args) {
        
		
		
		Queue<String> q = new LinkedList<String>();
		        q.add("newyork");
		        q.add("ca");
		        q.add("texas");
		        show(q);
		    }
		
		    public static void show(Queue q) {
		        q.add(new Integer(11));
		        while (!q.isEmpty ( ) )
		            System.out.print(q.poll() + "  ");
		    }


}




options
A)Compile error : Integer can't add
B)newyork  ca  texas  11
C)newyork  ca  texas
D)newyork  ca 

	Answer: _________)____________________________
		| A)Compile error : Integer can't add |
		---------------------------------------

Questions no -30 
What is the output for the below code ?

public interface TestInf {
 int i =10;
}

public class Test {
	public static void main(String... args) {
		TestInf.i=12;
		System.out.println(TestInf.i);
	
	}
	
	
	
}



options
A)Compile with error
B)10
C)12
D) Runtime Exception

	Answer: _______________________
		| A)Compile with error |
		-----------------------

Questions no -31 
What is the output for the below code ?

public class Test {
            static { int a = 5; }
            public static void main(String[] args){
            System.out.println(a);
            }
          }



options
A)Compile with error
B)5
C)0
D) Runtime Exception

	Answer : _______________________
		| A)Compile with error |
		------------------------

Questions no -32 
What is the output for the below code ?

class A {
  { System.out.print("b1 "); }
  public A() { System.out.print("b2 "); }
}
class B extends A {
  static { System.out.print("r1 "); }
  public B() { System.out.print("r2 "); }
  { System.out.print("r3 "); }
  static { System.out.print("r4 "); }
}
class C extends B {
  public static void main(String[] args) {
    System.out.print("pre ");
    new C();
    System.out.println("post ");
  }
}



options
A)r1 r4 pre b1 b2 r3 r2 post
B)r1 r4 pre b1 b2  post
C)r1 r4 pre b1 b2  post r3 r2
D)pre r1 r4  b1 b2  r2 r3 post



Questions no -33 
What is the output for the below code ?

public class Test {
	
	public static void main(String... args) throws Exception {
		Integer i = 34;
		int l = 34;
		if(i.equals(l)){
			System.out.println(true);
		}else{
			System.out.println(false);
		}

	}
	
}



options
A)true
B)false
C)Compile Error
D) Runtime Exception

	Answer: _________
		| A)true |
		----------

Questions no -34 
Which statement is true about outer class?



options
A)outer class can only declare public , abstract and final
B)outer class may be private
C)outer class can't be abstract
D)outer class can be static

 Answer:


Questions no -35 

What is the output for the below code ?

static public class Test {
	public static void main(String[] args) {
		  char c = 'a';
	
		 switch(c){
		     case 65:
		              System.out.println("one");break;
		     case 'a':
		              System.out.println("two");break;
		     case 3:
		              System.out.println("three");
		}
		
		}
	

}



options
A)one
B)two
C)Compile error - char can't be permitted in switch statement 
D)Compile error - Illegal modifier for the class Test; only public, abstract & final are permitted.

	Answer: ________
		| B)two	|
		---------
  		


Questions no -36

What is the output for the below code ?

public class Test {
	
	public static void main(String... args) {
		ArrayList<Integer> list = new ArrayList<Integer>();
		list.add(1);
		list.add(2);
		list.add(3);
		
		for(int i:list)
			System.out.println(i);
		

	}
}

options
A)1 2 3
B)Compile error , can't add primitive type in ArrayList
C)Compile error on for(int i:list) , Incorrect Syntax
D)0 0 0


Questions no -37 
What is the output for the below code ?

public class SuperClass {
	public int doIt(String str, Integer... data)throws ArrayIndexOutOfBoundsException{
		String signature = "(String, Integer[])";
		System.out.println(str + "  " + signature);
		return 1;
	}

}


public class SubClass extends SuperClass{

	public int doIt(String str, Integer... data) throws Exception
	{
		String signature = "(String, Integer[])";
		System.out.println("Overridden: " + str + " " + signature);
		return 0;
	}
	
	public static void main(String... args)
	{
		SuperClass sb = new SubClass();
		try{
			sb.doIt("hello", 3);
		}catch(Exception e){
			
		}
		
	}
	
}



options
A)Overridden: hello (String, Integer[])
B)hello (String, Integer[])
C)This code throws an Exception at Runtime
D)Compile with error


Questions no -38
What is the result of executing the following code, using the parameters 0 and 3 ?

public void divide(int a, int b) {
	try {
		int c = a / b;
	} catch (Exception e) {
		System.out.print("Exception ");
	} finally {
		System.out.println("Finally");
}



options
A)Prints out: Exception Finally
B)Prints out: Finally
C)Prints out: Exception
D)Compile with error


Questions no -39
Which of the below statement is true about Error?



options
A)An Error is a subclass of Throwable
B)An Error is a subclass of Exception
C)Error indicates serious problems that a reasonable application should not try to catch.
D)An Error is a subclass of IOException


Questions no -40
Which of the following is type of RuntimeException?





options
A)IOException
B)ArrayIndexOutOfBoundsException
C)Exception
D)Error


Questions no -41 
What is the output for the below code ?

public class Test {
	
	public static void main(String... args) throws Exception {
		 File file = new File("test.txt");  
		 System.out.println(file.exists());
		 FileWriter fw = new FileWriter(file); 
		 System.out.println(file.exists());
	}
	
}




options
A)true true
B)false false
C)false true
D)true false


Questions no -42 
When comparing java.io.BufferedWriter and java.io.FileWriter, which capability exist as a method in only one of two ?




options
A)closing the stream
B)flushing the stream
C)writting to the stream
D)writting a line separator to the stream


Questions no -43 
What is the output for the below code ?
public class Test{

public static void main(String[] args) {
  int i1=1;
 switch(i1){
     case 1:
              System.out.println("one");
     case 2:
              System.out.println("two");
     case 3:
              System.out.println("three");
}
}
}


options
A)one two three
B)one
C)one two
D)Compile error.


Questions no -44 
What is the output for the below code ?
public class Test {
	public static void main(String[] args) {
		  char c = 'a';
	
		 switch(c){
		     case 65:
		              System.out.println("one");break;
		     case 'a':
		              System.out.println("two");break;
		     case 3:
		              System.out.println("three");
		}
		
		}
	

}


options
A)one two three
B)one
C)two
D)Compile error - char can't be in switch statement.



Questions no -45
What is the output for the below code ?

public class Test {
	public static void main(String... args) {
        
		
		 List<Integer> lst = new ArrayList<Integer>();
		 lst.add(34);
		 lst.add(6);
		 lst.add(6);
		 lst.add(6);
		 lst.add(6);
		 lst.add(5);
		         
	        NavigableSet<Integer>  nvset = new TreeSet(lst);
	        System.out.println(nvset.tailSet(6));
	     	      
	}
}




options
A)Compile error : No method  name like tailSet()
B)6 34
C)5
D)5 6 34


Questions no -46 
What is the output for the below code ?

import java.util.ArrayList;
import java.util.List;
import java.util.NavigableSet;
import java.util.TreeSet;




public class Test {
	public static void main(String... args) {
        
		
		List<Integer> lst = new ArrayList<Integer>();
		 lst.add(34);
		 lst.add(6);
		 lst.add(6);
		 lst.add(6);
		 lst.add(6);
		         
	        NavigableSet<Integer>  nvset = new TreeSet(lst);
	        nvset.pollFirst(); 
	        nvset.pollLast();
            System.out.println(nvset.size());


	     	      
	}
}




options
A)Compile error : No method  name like pollFirst() or pollLast()
B)0
C)3
D)5


Questions no -47
What is the output for the below code ?

import java.util.ArrayList;
import java.util.List;
import java.util.NavigableSet;
import java.util.TreeSet;


public class Test {
	public static void main(String... args) {
        
		
		 List<Integer> lst = new ArrayList<Integer>();
		 lst.add(34);
		 lst.add(6);
		 lst.add(2);
		 lst.add(8);
	     lst.add(7);
	     lst.add(10);
	        
	        NavigableSet<Integer>  nvset = new TreeSet(lst);
	        System.out.println(nvset.lower(6)+" "+nvset.higher(6)+ " "+ nvset.lower(2));
	      
	}
}



options
A)1 2 7 10 34 null
B)2 7 null
C)2 7 34
D)1 2 7 10 34


Questions no -48
What is the output for the below code ?

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.NavigableSet;
import java.util.TreeSet;


public class Test {
	public static void main(String... args) {
        
		
		 List<Integer> lst = new ArrayList<Integer>();
		 lst.add(34);
		 lst.add(6);
		 lst.add(2);
		 lst.add(8);
	     lst.add(7);
	     lst.add(10);
	        
	        NavigableSet<Integer>  nvset = new TreeSet(lst);
	         System.out.println(nvset.headSet(10));

	      
	}
}




options
A)Compile error : No method  name like headSet()
B)2, 6, 7, 8, 10
C)2, 6, 7, 8
D)34


Questions no -49 
What is the output for the below code ?

import java.io.Console;

public class Test {
	public static void main(String... args) {
        
		
		Console con = System.console();
		  boolean auth = false;
		 
		  if (con != null)
		  {
		    int count = 0;
		    do
		    {
		      String uname = con.readLine(null);
		      char[] pwd = con.readPassword("Enter %s's password: ", uname);
		      
		      con.writer().write("\n\n");  
		    } while (!auth && ++count < 3);
		  }



	     	      
	}
}




options
A)NullPointerException
B)It works properly
C)Compile Error : No readPassword() method in Console class.
D)null

	
